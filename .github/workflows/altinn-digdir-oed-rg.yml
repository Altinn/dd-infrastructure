name: altinn-digdir-oed-rg

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/altinn-digdir-oed-rg.yml
      - infra/altinn-digdir-oed-rg/**
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/altinn-digdir-oed-rg.yml
      - infra/altinn-digdir-oed-rg/**
  workflow_dispatch:
    inputs:
      log_level:
        required: true
        description: Terraform Log Level
        default: WARN
        type: choice
        options:
          - TRACE
          - DEBUG
          - INFO
          - WARN
          - ERROR

env:
  ENVIRONMENT: prod
  TF_STATE_NAME: altinn-digdir-oed-rg.tfstate
  TF_PROJECT: ./infra/altinn-digdir-oed-rg
  ARM_CLIENT_ID: ${{ vars.TF_AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: 0f05e9d4-592b-491a-b9da-49a8b242d0c5
  TF_LOG: ${{ github.event.inputs.log_level || 'INFO' }}

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  plan:
    name: Plan
    environment: prod
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.5

      - name: Terraform Format
        run: terraform fmt -recursive
        working-directory: ${{ env.TF_PROJECT }}

      - name: Terraform Plan
        uses: altinn/altinn-platform/actions/terraform/plan@main
        with:
          working_directory: ${{ env.TF_PROJECT }}
          oidc_type: environment
          oidc_value: ${{ env.ENVIRONMENT }}
          arm_client_id: ${{ env.ARM_CLIENT_ID }}
          arm_subscription_id: ${{ env.ARM_SUBSCRIPTION_ID }}
          tf_state_name: ${{ env.TF_STATE_NAME }}
          gh_token: ${{ secrets.GITHUB_TOKEN }}
          tf_version: 1.10.5

  deploy:
    name: Deploy
    environment: prod
    if: github.ref == 'refs/heads/main'
    needs: plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.5

      - name: Terraform Format
        run: terraform fmt -recursive
        working-directory: ${{ env.TF_PROJECT }}

      - name: Terraform Apply
        uses: altinn/altinn-platform/actions/terraform/apply@main
        with:
          working_directory: ${{ env.TF_PROJECT }}
          oidc_type: environment
          oidc_value: ${{ env.ENVIRONMENT }}
          arm_client_id: ${{ env.ARM_CLIENT_ID }}
          arm_subscription_id: ${{ env.ARM_SUBSCRIPTION_ID }}
          tf_state_name: ${{ env.TF_STATE_NAME }}
          tf_version: 1.10.5
